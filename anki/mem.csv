Graph: Find connected components of a graph;BFS/DFS O(V + E), keep track of components with Union-Find.
Graph: Detect cycle in a graph;DFS look for back-edge O(V + E). Also possible with Union-Find: loop on edges, union-find on vertices O(E)?
SD: RAM R/W speed;10 GB/s
SD: SSD R/W speed;500 MB/s
SD: HDD R/W speed;100 MB/s
SD: RAM latency;100 ns
SD: SSD latency;0.1 ms
SD: HDD latency;10 ms, disk seek
Array: Find maximum in sliding window;1. use self-balanced BST O(n log n). 2. Use dequeue keeping only useful elements O(n)
String: Regex matching;Recursive, DP. With offset going from left to right.
Tree: Check if a tree is a BST (2);1. recursive propagate min/max O(n), 2. check if in-order traversal is sorted
Tree: Convert BT to doubly LL;TODO
Tree: Print tree perimeter (border);print left boundary without leaf, print leaves, print right in reverse (recursive)
Tree: Serialize/Deserialize;Special case? BST, complete, full?. Inorder array with null marker
Tree: Inorder sucessor in BT with parent pointer;If right subtree of node is not NULL, successor in minimum of right subtree. Else then succ is one of the ancestors. Travel up using the parent pointer until you see a node which is left child of it’s parent. The parent of such a node is the succ. O(h)
Tree: Inorder sucessor in BT without parent pointer;Search from root O(h). Instead of traveling up with parent pointers: Travel down the tree, if a node’s data is greater than root’s data then go right side, otherwise go to left side.
Tree: k-th highest element of BST;reverse inorder traversal of BST. O(h + k)
SD: Read 1 MB sequentially from memory;250 us
SD: Read 1 MB sequentially from SSD;1 ms
SD: Read 1 MB sequentially from HDD;20 ms,   20X SSD
SD: Read 4K randomly from SSD;150 us
SD: Send 1K bytes over 1 Gbps network;10 us
SD: Round trip within same datacenter;500 us
SD: Send packet CA->Netherlands->CA;150 ms.     300X datacenter
SD: L1 cache reference; 1 ns
SD: L2 cache reference;10 ns       10x L1 cache
SD: Main memory reference;100 ns       100x L1 cache, 10x L2 cache
Array: Given infinite coins of value (V1, V2, … ,VN), find the minimum number of coins with sum S;DP(n, S)
Array: Continuous median;2 heaps
Array: Given an array of integers, every element appears twice except for one. Find that single one;XOR
String: Is a string with (), {}, [] balanced;stack with active items

