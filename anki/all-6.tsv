SD: How many simulataneous connections on a whatsapp server	2 million
SD: why Kafka performance (2)	zero-copy<br>batching
SD meth: system design methodology	1. Scope (and non-scope)<br>2. Usage<br>3. SLA (latency, avail)<br>4. API?
SD components: 6 techniques to scale RDBMS<br>general/read/writes	general:<br>- federation<br>scale reads:<br>- master-slave replication<br>scale writes:<br>- sharding<br><br>denormalization<br>SQL tuning
SD meth: system design methodology for storage	1. data model<br>2. size<br>3. Usage r/w<br>4. SLA<br>5. Bias (popular, geo)
Sort: 4 sort properties	- stable<br>- in place<br>- comparison or not<br>- external
SD: skip list<br>- definition<br>- complexities<br>- used in	linked list for binary search<br>layers of sorted linked lists (express lanes)<br>p = 1/2 or 1/4, proba for element to be also in layer below<br><br>O(log n) average for search/insert/delete, O(n) average space<br>used in LevelDB MemTable
SD: consistency in CAP theorem	all nodes see the same data all the time
SD: availability in CAP theorem	every request receives a response about its success
SD: partition tolerance in CAP theorem	system continues to operate despite message loss or failure of part of the system
SD components: BigTable: data model, API, 2 open source equivalents	1. row (row key)<br>2. column: column families + column qualifier within family<br>3. timestamp<br><br>sparse: no room taken for empty cells<br><br>- lookup by row key, range query<br>- HBase, Cassandra
